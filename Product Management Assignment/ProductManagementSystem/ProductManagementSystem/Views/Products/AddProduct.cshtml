@model ProductManagementSytem.Model.ProductModel

@{
    ViewBag.Title = "AddProduct";
}

<h2>AddProduct</h2>

<script>
    $(document).ready(function () {
        $("PostData").submit(function (e) {
            e.preventDefault();
            var data = new FormData();
            var Name = $("Name").val();
            var Category= $("Category").val();
            var Price= $("Price").val();
            var SmallI = $("SImage").get(0).files;
            if (SmallI.length > 0) {
                data.append("SmallImage", SmallI[0]);
            }
            var LargeI = $("LImage").get(1).files;
            if (LargeI.length > 0) {
                data.append("LargeImage", LargeI[0]);
            }
            var SmallD = $("SDesc").val();
            var LargeD = $("LDesc").val();
            
            $.ajax({
                url: "http://localhost:2200/Api/Product",
                dataType: 'JSON',
                type: 'POST',
                data: data,
                success: function (d) {
                    alert("Product added successsfully");
                    document.getElementById("PostData").reset();
                },
                error: function () {
                    alert("An error occured while adding product");
                }
            });
        });
    });
</script>

@using (Html.BeginForm("AddProduct","Products",FormMethod.Post, new { encytype="multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal" id="PostData">
        <h4>ProductModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2", id="Name" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryName, htmlAttributes: new { @class = "control-label col-md-2" ,id="Category" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CategoryName, new List<SelectListItem> { new SelectListItem { Text="Facewash", Value="Facewash"} ,
                         new SelectListItem { Text="Shampoo", Value="Shampoo"}, new SelectListItem { Text="Conditioners", Value="Conditioners"},
                         new SelectListItem { Text="Cleansers", Value="Cleansers"} },"Select Category")
                @Html.ValidationMessageFor(model => model.CategoryName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2", id="Price" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SmallImage, htmlAttributes: new { @class = "control-label col-md-2", id="SImage" })
            <div class="col-md-10">
                <input type="file" accept="image" id="SmallImage" />
                @Html.ValidationMessageFor(model => model.SmallImage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LargeImage, htmlAttributes: new { @class = "control-label col-md-2",id="LImage" })
            <div class="col-md-10">
                <input type="file" accept="image" id="LargeImage" />
                @Html.ValidationMessageFor(model => model.LargeImage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" , id="Quantity"})
            <div class="col-md-10">
                @Html.DropDownListFor(model=>model.Quantity,new List<SelectListItem> { new SelectListItem { Text="1", Value="1"},
                        new SelectListItem { Text="2", Value="2"}, new SelectListItem { Text="3", Value="3"},
                        new SelectListItem { Text="4", Value="4"}, new SelectListItem { Text="5", Value="5"},
                        new SelectListItem { Text="6", Value="6"}, new SelectListItem { Text="7", Value="7"},
                        new SelectListItem { Text="8", Value="8"}, new SelectListItem { Text="9", Value="9"},
                        new SelectListItem { Text="10", Value="10"}}, "Select Quantity")
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SmallDescription, htmlAttributes: new { @class = "control-label col-md-2", id="SDesc" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SmallDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SmallDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LargeDescription, htmlAttributes: new { @class = "control-label col-md-2", id="LDesc" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LargeDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LargeDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to Product List", "GetAllProducts")
</div>
